#include<iostream>
#include<math.h>
using namespace std;

//Pentagon numbers
//
//Problem 44
//Pentagonal numbers are generated by the formula, Pn=n(3n-1)/2. The first ten pentagonal numbers are:
//
//1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
//
//It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 - 22 = 48, is not pentagonal.
//
//Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk - Pj| is minimised; what is the value of D?

bool checkPentagonal(int no)
{
	int a = (sqrt(24 * no) / 6) + 1;
	if((a * (3 * a - 1)) / 2 == no)
	{
		return true;
	}
	return false;
}

int main()
{
	int i = 1, result = 0, n = 0, m = 0;
	bool found = false;
	while(!found)
	{
		i++;
		n = (i * (i * 3 - 1)) / 2;
		for(int j = i - 1; j > 0; j--)
		{
			m = (j * (3 * j - 1)) / 2;
			if(checkPentagonal(n - m) && checkPentagonal(n + m))
			{
				result = n - m;
				cout<<"The Pentagonal Numbers For which D is maximum :: "<<n<<" - "<<m<<" = "<<result;
				found = true;
			}
		}
	}
	return 0;
}

